name: ZAP DAST (Static Site in Docker)

on:
  push

permissions:
  contents: read
  packages: read
  statuses: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Upgrade pip & install Semgrep
        run: |
          python -m pip install --upgrade pip 
          pip install semgrep

      - name: Run Semgrep
        run: semgrep --config auto --error || true

      - name: Semgrep JSON report
        run: semgrep --config auto --error --json -o semgrep.json || true

      - name: Semgrep SARIF report
        run: semgrep --config auto --error --sarif -o semgrep.sarif || true

      - name: Semgrep JUnit report
        run: semgrep --config auto --error --junit-xml -o semgrep-junit.xml || true

      - name: Upload Semgrep artifacts
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-reports
          path: |
            semgrep.json
            semgrep.sarif
            semgrep-junit.xml

  zap:
    name: ZAP
    runs-on: ubuntu-latest
    # if: always() -- will proceed kahit nag fail si semgrep
    needs: 
        - semgrep

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build app image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: app-under-test:latest
          push: false
          load: true

      - name: Run app container
        run: docker run -d --name aut -p 8080:80 app-under-test:latest

      - name: Wait for app to be ready
        run: |
          for i in {1..60}; do
            if curl -fsS http://localhost:8080/ > /dev/null; then
              echo "App is up."
              exit 0
            fi
            echo "Waiting for app... ($i/60)"
            sleep 2
          done
          echo "App did not start in time."
          docker logs aut || true
          exit 1

      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:8080'
          cmd_options: '-r zap_report.html -w zap_report.md -J zap_report.json'

      - name: Upload ZAP reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: |
            zap_report.html
            zap_report.md
            zap_report.json

      - name: Cleanup
        if: always()
        run: docker rm -f aut || true


  
